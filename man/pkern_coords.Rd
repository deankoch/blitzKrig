% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bk_index.R
\name{bk_coords}
\alias{bk_coords}
\title{Return coordinates of a grid of points in column-vectorized order}
\usage{
bk_coords(g, out = "matrix", corner = FALSE, quiet = FALSE)
}
\arguments{
\item{g}{any object accepted by \code{bk_grid}}

\item{out}{character indicating return value type, either 'list', 'matrix', or 'sf'}

\item{corners}{logical, indicates to only return the corner points}
}
\value{
a matrix, list, or sf POINT collection, in column vectorized order
}
\description{
Expands a set of y and x grid line numbers in the column-vectorized order returned
by \code{bk_grid}.
}
\details{
This is similar to \code{base::expand.grid} but with the first dimension (y) descending
instead of ascending.

\code{out='sf'} returns an \code{sf} simple features object containing points in the same order,
with data (if any) copied from \code{g$gval} into column 'gval'. Note that \code{prod(g$gdim)}
points are created, which can be slow for large grids.
}
\examples{
gdim = c(5,3)
g_example = bk_grid(list(gdim=gdim, gres=c(0.5, 0.7), gval=seq(prod(gdim))))
bk_coords(g_example)
bk_coords(g_example, out='list')

# corner points
bk_coords(g_example, corner=TRUE)
bk_coords(g_example, corner=TRUE, out='list')

# sf output type
if( requireNamespace('sf') ) {

# make the points
sf_coords = bk_coords(g_example, out='sf')

# data are copied to variable 'gval'
plot(sf_coords, pch=16)

}

}
